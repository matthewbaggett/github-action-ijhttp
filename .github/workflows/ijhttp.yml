name: Build IJHTTP container

permissions:
  contents: read

on:
  push:

  pull_request:
    branches:
      - "!dependabot/**"
  workflow_dispatch:

concurrency:
  group: ijhttp-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  trunk-check:
    name: Trunk Check Runner
    runs-on: ubuntu-latest
    permissions:
      checks: write # For trunk to post annotations
      contents: read # For repo checkout
    steps:
      - name: Checkout
        if: ${{ !env.ACT }}
        uses: actions/checkout@v4

      - name: Trunk Check
        if: ${{ !env.ACT }}
        uses: trunk-io/trunk-action@v1

  ijhttp-test:
    runs-on: ubuntu-latest
    steps:
      - id: ijhttp
        name: Run ijhttp
        uses: ./. # Use the local action
        with:
          http_file: test/test.http
          environments_file: test/http-client.env.json
          selected_environment: test
          variables: |
            foo=bar
            baz=qux
          secrets: magic_word=please
      - name: Get the report
        run: |
          echo "Selected Environment: ${{ steps.ijhttp.outputs.selected_environment }}"
          echo "Report: ${{ steps.ijhttp.outputs.report }}"

  ijhttp-build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read # For repo checkout
      packages: write # For writing to packages
    needs:
      - trunk-check
      #- ijhttp-test
    steps:
      - name: "Setup: Prepare"
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: "Setup: Docker meta"
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/matthewbaggett/github-action-ijhttp
            matthewbaggett/github-action-ijhttp
          labels: |
            org.opencontainers.image.title=IJHTTP
            org.opencontainers.image.description=GitHub Action for IJHTTP
            org.opencontainers.image.vendor=Matthew Baggett
          tags: |
            type=raw,value=latest,enable=true
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: "Setup: Setup QEMU"
        uses: docker/setup-qemu-action@v2

      - name: "Setup: Setup Docker Buildx"
        uses: docker/setup-buildx-action@v3

      - name: "Setup: Login to Docker Hub"
        uses: docker/login-action@v3
        with:
          username: matthewbaggett
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: "Setup: Login to GHCR"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: matthewbaggett
          password: ${{ secrets.GHCR_PASSWORD }}

      - name: "Setup: Checkout Source"
        uses: actions/checkout@v4

      - name: "Build: Docker Build"
        uses: docker/build-push-action@v4
        id: build
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          platforms: |
            linux/amd64
            linux/arm64
          pull: true
          push: true
          cache-from: ${{ !env.ACT && 'type=gha,scope=ijhttp-' || '' }}
          cache-to: ${{ !env.ACT && 'type=gha,mode=max,scope=ijhttp-' || '' }}

      - name: "Build: Output tags"
        run: |
          echo "Tags:"
          ${{ steps.meta.outputs.tags }}
          echo "Build meta:"
          ${{ steps.build.outputs.metadata }}
